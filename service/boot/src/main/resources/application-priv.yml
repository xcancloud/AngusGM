xcan:
  trace:
    enabled: true
  cloud:
    gmApiUrlPrefix: ${GM_CLOUD_APIS_URL_PREFIX}
  event:
    gmApiUrlPrefix: ${GM_APIS_URL_PREFIX}
  datasource:
    extra:
      dbType: '@databaseType@'
      entityPackages:
        - cloud.xcan.angus.idgen.entity
        - cloud.xcan.angus.core.gm.domain
        - cloud.xcan.angus.api.commonlink
    hikari:
      readOnly: false
      connectionTestQuery: SELECT 1 FROM DUAL
      poolName: xcanHikariCP
      idleTimeout: 600000
      maxLifetime: 1800000
      maximumPoolSize: 30
      minimumIdle: 10
    mysql:
      driverClassName: com.mysql.cj.jdbc.Driver
      type: com.zaxxer.hikari.HikariDataSource
      url: jdbc:mysql://${GM_MYSQL_HOST}:${GM_MYSQL_PORT}/${GM_MYSQL_DB}?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=${info.app.timezone}&rewriteBatchedStatements=true
      username: ${GM_MYSQL_USER}
      password: ${GM_MYSQL_PASSWORD}
      schema:
        - mysql/idgen-schema.sql
    postgresql:
      driverClassName: org.postgresql.Driver
      type: com.zaxxer.hikari.HikariDataSource
      url: jdbc:postgresql://${GM_POSTGRES_HOST}:${GM_POSTGRES_PORT}/${GM_POSTGRES_DB}?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=${info.app.timezone}&rewriteBatchedStatements=true
      username: ${GM_POSTGRES_USER}
      password: ${GM_POSTGRES_PASSWORD}
      schema:
        - postgres/idgen-schema.sql
    commonlink:
      mysql:
        driverClassName: com.mysql.cj.jdbc.Driver
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:mysql://${COMMON_MYSQL_HOST}:${COMMON_MYSQL_PORT}/${COMMON_MYSQL_DB}?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=${info.app.timezone}&rewriteBatchedStatements=true
        username: ${COMMON_MYSQL_USER}
        password: ${COMMON_MYSQL_PASSWORD}
      postgresql:
        driverClassName: org.postgresql.Driver
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:postgresql://${COMMON_POSTGRES_HOST}:${COMMON_POSTGRES_PORT}/${COMMON_POSTGRES_DB}?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=${info.app.timezone}&rewriteBatchedStatements=true
        username: ${COMMON_POSTGRES_USER}
        password: ${COMMON_POSTGRES_PASSWORD}
  redis:
    enabled: true
    deployment: SINGLE
    host: ${GM_REDIS_HOST}
    port: ${GM_REDIS_PORT}
    password: ${GM_REDIS_PASSWORD}
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 5

eureka:
  datacenter: self-host-dc1
  environment: beta
  client:
    healthcheck:
      # Disable health check-triggered auto-deregistration
      enabled: false
    register-with-eureka: true
    eureka-connection-idle-timeout-seconds: 10
    initial-instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
    serviceUrl:
      defaultZone: http://${GM_EUREKA_USER_NAME}:${GM_EUREKA_USER_PASSWORD}@${GM_HOST}:${GM_PORT}/eureka/
  instance:
    app-name: '@artifactId@'
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    lease-expiration-duration-in-seconds: 30
    lease-renewal-interval-in-seconds: 10
    prefer-ip-address: true
    status-page-url: http://${spring.cloud.client.ip-address}:${server.port}/swagger-ui/
    health-check-url-path: /actuator/health
  server:
    enable-self-preservation: false
    renewal-percent-threshold: 0.85
    a-sgcache-expiry-timeout-ms: 300000
    registry-sync-retry-wait-ms: 3000
    eviction-interval-timer-in-ms: 5000
    peer-eureka-nodes-update-interval-ms: 5000
    renewal-threshold-update-interval-ms: 30000

spring:
  security:
    oauth2:
      resource-server:
        opaque-token:
          client-id: ${OAUTH2_INTROSPECT_CLIENT_ID}
          client-secret: ${OAUTH2_INTROSPECT_CLIENT_SECRET}
          introspection-uri: ${GM_APIS_URL_PREFIX}/oauth2/introspect

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 200
          time_zone: ${info.app.timezone}
        order_inserts: true
        order_updates: true
        enable_lazy_load_no_trans: true
        session_factory:
          statement_inspector: cloud.xcan.angus.core.jpa.interceptor.TenantInterceptor
    database: '@databaseType@'
    database-platform: '@databaseDialect@'
    open-in-view: false

logging:
  level:
    org: WARN
    com: WARN
    com.netflix: ERROR
    org.springframework.cloud.netflix.eureka.server: ERROR
