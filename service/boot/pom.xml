<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>cloud.xcan.angus</groupId>
    <artifactId>xcan-angusgm.parent</artifactId>
    <version>1.0.0</version>
  </parent>

  <artifactId>xcan-angusgm.boot</artifactId>
  <name>AngusGM :: Boot</name>
  <packaging>jar</packaging>

  <properties>
    <archive.name>gm</archive.name>
    <hump.name>AngusGM</hump.name>
    <docker.image.name>angusgm</docker.image.name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>cloud.xcan.angus</groupId>
      <artifactId>xcan-angusgm.core</artifactId>
    </dependency>

    <dependency>
      <groupId>cloud.xcan.angus</groupId>
      <artifactId>xcan-infra.web-starter</artifactId>
    </dependency>

    <!-- Note: The auth-server-starter must come before auth-resource-starter to ensure it is initialized first. -->
    <dependency>
      <groupId>cloud.xcan.angus</groupId>
      <artifactId>xcan-infra.auth-server-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>cloud.xcan.angus</groupId>
      <artifactId>xcan-infra.auth-resource-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-ldap</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
    </dependency>

  </dependencies>

  <build>
    <finalName>${hump.name}-${editionName}-${project.version}</finalName>
    <filters>
      <filter>src/main/resources/application.yml</filter>
      <filter>src/main/resources/application-${profile.active}.yml</filter>
    </filters>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*</include>
        </includes>
        <excludes>
          <exclude>static/**</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>static/**</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>spring-logback.xml</include>
        </includes>
      </resource>

      <resource>
        <directory>src/main/scripts</directory>
        <includes>
          <include>startenv.sh</include>
          <include>*.sh</include>
          <include>*.bat</include>
        </includes>
        <filtering>true</filtering>
        <targetPath>${project.basedir}/target</targetPath>
      </resource>

      <resource>
        <directory>src/main/docker</directory>
        <includes>
          <include>Dockerfile</include>
        </includes>
        <filtering>true</filtering>
        <targetPath>${project.basedir}/target</targetPath>
      </resource>

      <resource>
        <directory>conf</directory>
        <includes>
          <include>*.properties</include>
          <include>*.xml</include>
        </includes>
        <filtering>true</filtering>
        <targetPath>${project.basedir}/target</targetPath>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>cloud.xcan.angus.XCanAngusGMApplication</mainClass>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- Build the Docker image and push it to the registry. -->
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <configuration>
              <repository>${docker.image.name}</repository>
              <tag>${project.version}</tag>
              <dockerfile>${project.build.directory}/Dockerfile</dockerfile>
              <buildArgs>
                <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
              </buildArgs>
            </configuration>
            <executions>
              <execution>
                <id>docker-build</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-push</id>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
